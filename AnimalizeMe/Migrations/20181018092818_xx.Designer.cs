// <auto-generated />
using AnimalizeMe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AnimalizeMe.Migrations
{
    [DbContext(typeof(AnimalizeMeDbContext))]
    [Migration("20181018092818_xx")]
    partial class xx
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnimalizeMe.Models.Creature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImagePath");

                    b.HasKey("Id");

                    b.ToTable("Creatures");
                });

            modelBuilder.Entity("AnimalizeMe.Models.CreatureTags", b =>
                {
                    b.Property<int>("TagId");

                    b.Property<int>("CreatureId");

                    b.HasKey("TagId", "CreatureId");

                    b.HasIndex("CreatureId");

                    b.ToTable("CreatureTags");
                });

            modelBuilder.Entity("AnimalizeMe.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("AnimalizeMe.Models.CreatureTags", b =>
                {
                    b.HasOne("AnimalizeMe.Models.Creature", "Creature")
                        .WithMany("CreatureTags")
                        .HasForeignKey("CreatureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AnimalizeMe.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
